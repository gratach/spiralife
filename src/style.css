html, body {
    height: 100%;
    margin: 0;
    padding: 0;
    overflow: hidden; /* Prevent scrollbars on the body itself */
    font-family: sans-serif;
    color: #333;
}

body {
    display: flex; /* Helps manage main layout areas if needed, though many elements are fixed */
    background-color: #f4f4f4; /* Default background, though calendarBackground will cover it */
}

/* Utility class to prevent text selection */
.no-select {
    user-select: none;
    -webkit-user-select: none; /* Safari */
    -moz-user-select: none;    /* Firefox */
    -ms-user-select: none;     /* Internet Explorer/Edge */
}

#flapScrollableContent {
    height: 100%; /* Fill the content area of #parametersFlap */
    overflow-y: auto; /* Enable scrolling for this inner div */
}

#calendarBackground {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: auto; /* This is key for showing scrollbars */
    /* background-color: #eee; */ /* Optional: for debugging viewport */
    z-index: 0; /* Or an appropriate value if other elements are layered */
    transition: left 0.3s ease-in-out, width 0.3s ease-in-out; /* For animation */
}

#zoomableScrollableContainer {
    position: relative; /* Important for child positioning if needed, and for transform-origin */
    /* width and height are set by JS */
    /* border: 1px solid red; */ /* Optional: for debugging */
    cursor: grab; /* Default cursor for the draggable area */
}

#svgContainer {
    width: 100%;
    height: 100%;
    /* display: flex; justify-content: center; align-items: center; */ /* Flex centering removed */
    /* border: 1px solid blue; */ /* Optional: for debugging */
    /* overflow: auto; Removed, handled by #calendarBackground */
}

#svgContainer svg {
    display: block; /* Good practice for elements being transformed/sized */
    transform-origin: top left;
    user-select: none;
    -webkit-user-select: none; /* Safari */
    -moz-user-select: none;    /* Firefox */
    -ms-user-select: none;     /* Internet Explorer/Edge */
}

#parametersFlap {
    position: fixed;
    top: 0;
    left: 0;
    height: 100%;
    width: 350px; /* Adjusted width */
    background-color: #f0f0f0;
    /* overflow-y: auto; */ /* Moved to #flapScrollableContent */
    padding: 20px;
    padding-top: 60px; /* Space for the toggle button */
    box-shadow: 2px 0 5px rgba(0,0,0,0.1);
    z-index: 50; /* Above calendarBackground but below other controls */
    /* transition: left 0.3s ease-in-out; */ /* Removed, using display: none now */
    box-sizing: border-box; /* Ensure padding doesn't add to width/height */
}

#parametersFlap.hidden {
    display: none; /* Hide when not active */
    /* left: -350px; */ /* Replaced by display: none */
}

#parametersFlap h1 {
    text-align: center;
    color: #2c3e50;
    font-size: 1.5em; /* Adjusted for flap */
    margin-top: 0; /* Remove default H1 margin if it's too much */
}

#calendarForm div {
    margin-bottom: 12px; /* Spacing between form fields */
    display: flex;
    flex-direction: column; /* Stack label and input vertically */
}

#calendarForm label {
    margin-bottom: 5px; /* Space between label and input */
    font-weight: bold;
    text-align: left; /* Align labels to the left in vertical layout */
}

#calendarForm input[type="number"],
#calendarForm input[type="text"],
#calendarForm select {
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
    width: 100%; /* Make inputs take full width of their container */
    box-sizing: border-box; /* Include padding and border in the element's total width and height */
}

#toggleParametersButton {
    position: fixed;
    top: 15px;
    left: 15px;
    z-index: 100; /* Above parametersFlap */
    padding: 10px 15px;
    background-color: #3498db;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 14px;
}

#toggleParametersButton:hover {
    background-color: #2980b9;
}

#downloadLink {
    position: fixed;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 100;
    padding: 12px 25px;
    background-color: #2ecc71; /* Green for download */
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    text-align: center;
    text-decoration: none;
    font-size: 16px;
    /* display: none; is set inline in HTML, JS will manage visibility */
}

#downloadLink:hover {
    background-color: #27ae60;
}

#zoomControls {
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 100; /* Above calendar background */
    display: flex; /* Use flex for layout if needed, or just position buttons */
    flex-direction: column; /* Stack zoom buttons vertically */
}

#zoomControls button {
    padding: 10px; /* Adjusted padding */
    margin-bottom: 8px; /* Space between zoom buttons */
    background-color: #7f8c8d; /* Using original theme color */
    color: white;
    border: none;
    border-radius: 5px; /* Original border-radius */
    cursor: pointer;
    font-size: 18px; /* Original font size */
    width: 40px; /* Original width */
    height: 40px; /* Original height */
    text-align: center;
    display: block; /* Ensure buttons are block for margin to work as expected */
}

#zoomControls button:last-child {
    margin-bottom: 0;
}

#zoomControls button:hover {
    background-color: #6c7a7d; /* Original hover color */
}

#errorMessageContainer {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 200; /* Highest z-index */
    background-color: rgba(231, 76, 60, 0.9); /* Reddish, slightly transparent */
    color: white;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 15px rgba(0,0,0,0.5);
    display: none; /* Initially hidden */
    min-width: 250px; /* Minimum width */
    text-align: center;
}

/* Styles for any content within the error message container, if needed */
#errorMessageContainer p {
    margin: 0;
}

/* Clean up old styles that are no longer needed or conflict */
/* #generateButton is removed from HTML, so its style is implicitly removed */
/* Old body margin, #calendarForm div flex alignment, etc., are overridden */
/* Old #svgContainer styles are largely overridden or adapted */

/* Ensure that the flap, when visible, doesn't cause horizontal scroll on body */
/* This is generally handled by `overflow: hidden` on html/body and correct fixed positioning. */
/* The `left: -350px` for `.hidden` on `#parametersFlap` ensures it's off-screen. */

/* Responsive considerations (optional for now, but good to keep in mind) */
@media (max-width: 768px) {
    #parametersFlap {
        top: 0;
        left: 0; /* Explicitly set, though inherited */
        width: 100%; /* Full width on smaller screens */
        /* height: auto; Removed */
        /* max-height: 50vh; Removed */
        height: 50vh; /* Fixed height for the flex container */
        bottom: auto; /* Override main style if it was 'bottom:0' */
        box-shadow: 0 2px 5px rgba(0,0,0,0.1); /* Shadow at the bottom */

        display: flex;
        flex-direction: column;
        /* overflow-y: auto; was here, removed to let #flapScrollableContent handle scrolling. */
        /* Global styles for padding (padding: 20px; padding-top: 60px;) and box-sizing: border-box remain active.
           #flapScrollableContent (with height: 100% and overflow-y: auto) will fill the content-box area
           of this flex container, respecting its parent's padding. */
    }

    /* #parametersFlap.hidden will rely on the global rule: #parametersFlap.hidden { display: none; } */
    /* No specific styles for .hidden needed here if display:none is the strategy. */
    /* If a slide-from-top animation was desired, we would add:
    /* #parametersFlap.hidden { top: -100%; transform: translateY(-100%); } */
    /* and JS would need to toggle a different class or directly manipulate 'top' or 'transform'. */
    /* For now, sticking to display:none as per wide-screen behavior. */


    #toggleParametersButton {
        /* No changes needed, existing fixed positioning (top: 15px; left: 15px;) should work. */
        /* Ensure padding-top on #parametersFlap is sufficient if this button is considered inside it. */
        /* Current #parametersFlap padding-top: 60px; should be fine. */
    }

    #downloadLink {
        bottom: 20px; /* Ensure it's at the bottom of the viewport */
        /* left: 50%; transform: translateX(-50%); are already set globally */
    }
    
    #zoomControls { /* Responsive styles for zoom controls */
        bottom: 20px; /* Ensure it's at the bottom of the viewport */
        /* right: 20px; is already set globally */
    }

    /* #calendarBackground will be handled by JavaScript for top/height adjustments */
    /* Example JS logic:
       const flapRect = parametersFlap.getBoundingClientRect();
       if (parametersFlap.style.display !== 'none') {
           calendarBackground.style.top = flapRect.height + 'px';
           calendarBackground.style.height = `calc(100% - ${flapRect.height}px)`;
       } else {
           calendarBackground.style.top = '0px';
           calendarBackground.style.height = '100%';
       }
       calendarBackground.style.left = '0px';
       calendarBackground.style.width = '100%';
    */

    #calendarForm input[type="number"],
    #calendarForm input[type="text"],
    #calendarForm select {
        max-width: none; /* Allow full width within the flap */
    }
}
